QUESTION LINK:-
https://leetcode.com/problems/find-the-duplicate-number/description/

SOLUTION:-

#include <vector>

class Solution {
public:
    int findDuplicate(std::vector<int>& nums) {
        // Phase 1: Find the intersection point in the cycle
        int tortoise = nums[0];
        int hare = nums[0];
        // Move tortoise by 1 step and hare by 2 steps
        do {
            tortoise = nums[tortoise];
            hare = nums[nums[hare]];
        } while (tortoise != hare);
        // Phase 2: Find the entrance to the cycle
        int pointer1 = nums[0];
        int pointer2 = tortoise; 
        // Move both pointers by 1 step
        while (pointer1 != pointer2) {
            pointer1 = nums[pointer1];
            pointer2 = nums[pointer2];
        }     
        return pointer1; // or pointer2, both are the same
    }
};
